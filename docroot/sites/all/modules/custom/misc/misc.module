<?php

/*
 * implements hook_menu
 */

function misc_menu() {
    module_load_include('inc', 'pathauto');

    $customnodes = array('news', 'news/latest', 'network-learning', 'network-learning/latest', 'press', 'press/latest', 'contact-thank-you');

    foreach ($customnodes as $key)
        $items[$key] = array(
            'page callback' => 'theme_render_template',
            'page arguments' => array(path_to_theme() . '/templates/node/node-unformatted--' . pathauto_cleanstring($key) . '.tpl.php', array()),
            'access callback' => TRUE,
        );

    return $items;
}

/*
 * Implements hook_views_invalidate_cache (runs when a change is made to views.
 *
 * Used to set a flag when a view is updated in order that the menu cache is rebuilt.
 * This allows the custom pages built in misc_menu to be refreshed with the updated views.
 * The refresh functionality is implemented in page.tpl.php
 */
function misc_views_invalidate_cache(){
   variable_set('custom_node_menu_rebuilt', FALSE);
}

/*
 * implements hook_theme()
 */
function misc_theme() {
    return array(
        'misc_contact_form_email' => array(
            'template' => 'templates/contact_form_email',
            'arguments' => array('content' => null),
        ),
    );
}

/**
 * implements hook_form_alter
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function misc_form_alter(&$form, &$form_state, $form_id) {

    if($form_id == 'national_organization_node_form'){
        $form['field_national_organization_twit'][LANGUAGE_NONE][0]['#format'] = 'full_html';
    }

  if($form_id == 'constant_contact_signup_form_1'){
    unset($form['captcha']);
    $form['submit']['#value'] = t('Subscribe to our newsletter');
    $form['#submit'][] = 'misc_constant_contact_signup_form_submit';
  }

}

/*
 * Function to override the constant_contact_signup_form_submit in order that it doesn't go to the homepage if the
 * block settings for the redirect url aren't set. Set status msg to "Success, you are now subscribed to our newsletter"
 */
function misc_constant_contact_signup_form_submit($form, &$form_state)
{
if ($_SESSION['messages']['status']['0'] === "Success, you are now subscribed to our mailing list"){
  $_SESSION['messages']['status']['0'] = "Success! You are now subscribed to our newsletter.";
}
  unset($form_state['redirect']);
}

/*
 * implements hook_entity_info_alter
 */

function misc_entity_info_alter(&$entity_info) {
    $entity_info['node']['view modes']['our_model'] = array(
        'label' => 'Our Model',
        'custom settings' => TRUE,
    );
    $entity_info['node']['view modes']['global_organization'] = array(
        'label' => 'Global organization',
        'custom settings' => TRUE,
    );
}

/*
 * contact us form
 */
function misc_widget_contact_form() {
    module_load_include('inc', 'misc', 'includes/misc_contact.form');
    return render(drupal_get_form('misc_contact_form'));
}

/*
 * implements hook_mail()
 */
function misc_mail($key, &$message, $params) {

    switch ($key) {
        case 'contact_form':
            $message['subject'] = t('Contact email from website');
            $langcode = $message['language']->language;
            $message['body'][] = theme('misc_contact_form_email', array('content' => $params));
            break;
    }
}


/**
 * Implements hook_block_info()
 * @author AlexB
 */
function misc_block_info()
{
    $blocks['contact_form'] = array(
        'info' => t('Contact form'),
        'status' => TRUE,
        'region' => 'content',
        'weight' => 0,
        'visibility' => 1,
    );

    return $blocks;
}

/**
 * Implements hook_block_view
 * @author AlexB
 */
function misc_block_view($delta = '')
{
    switch($delta){
        case 'contact_form':
            $block['title'] = '';
            $block['content'] = contact_block_contents($delta);
            return $block;
            break;
    }
}

/**
 * A module defined block content function.
 * @author AlexB
 */
function contact_block_contents($delta)
{
    switch($delta){
        case 'contact_form':
            $contact_form = misc_widget_contact_form();
            return $contact_form;
            break;
    }

}

function _misc_enable_translation() {
  $entities = array(
    'taxonomy_term' => array(
      'languages' => array(
        'replace_fields' => array('name'),
      ),
      'network_learning' => array(
        'replace_fields' => array('name'),
      ),
      'news' => array(
        'replace_fields' => array('name'),
      ),
      'supporter_levels' => array(
        'replace_fields' => array('name'),
      ),
    ),
    'file' => array(
      'image' => array(
        'replace_fields' => array('filename'),
      ),
    ),
    'node' => array(
      'page' => array(
        'replace_fields' => array('title'),
      ),
      'national_organization' => array(
        'replace_fields' => array('title'),
      ),
      'network_learning' => array(
        'replace_fields' => array('title'),
      ),
      'news' => array(
        'replace_fields' => array('title'),
      ),
      'page_1_col_layout' => array(
        'replace_fields' => array('title'),
      ),
      'global_problem' => array(
        'replace_fields' => array('title'),
      ),
      'page_donate' => array(
        'replace_fields' => array('title'),
      ),
      'page_join_our_staff' => array(
        'replace_fields' => array('title'),
      ),
      'national_organizations' => array(
        'replace_fields' => array('title'),
      ),
      'page_our_model' => array(
        'replace_fields' => array('title'),
      ),
      'page_results' => array(
        'replace_fields' => array('title'),
      ),
      'page_story_grid' => array(
        'replace_fields' => array('title'),
      ),
      'person' => array(
        'replace_fields' => array('title'),
      ),
      'spotlight' => array(
        'replace_fields' => array('title'),
      ),
      'tfa_supporter' => array(
        'replace_fields' => array('title'),
      ),
    )
  );


  foreach ($entities as $entity_type => $definition) {
    foreach ($definition as $bundle => $data) {


      if (!empty($data['replace_fields'])) {
        foreach ($data['replace_fields'] as $field_name) {
          if (!title_field_replacement_enabled($entity_type, $bundle, $field_name)) {
            title_field_replacement_toggle($entity_type, $bundle, $field_name);
            title_field_replacement_batch_set($entity_type, $bundle, $field_name);
          }
        }
      }
    }
  }




  $fields = array(
    'body',
    'field_blurb',
    'field_links',
    'field_teach_page',
    'field_careers_page',
    'field_contact_info',
    'field_city_1',
    'field_about',
    'field_key_facebook',
    'field_national_organization_twit',
    'field_network_learning_byline',
    'field_author',
    'field_embedded_video',
    'field_link',
    'field_text_area',
    'field_top_section_title',
    'field_top_section_subheader',
    'field_top_section_description',
    'field_globalproblem_subheader',
    'field_iframe',
    'field_nov2_intro',
    'field_nov2_principles_left',
    'field_nov2_principles_right',
    'field_nov2_links',
    'field_ourmodelintro_teachers',
    'field_ourmodelintro_leaders',
    'field_ourmodelintro_systemchange',
    'field_nov2_links',
    'field_nov2_intro',
    'field_summary',
    'field_content_top',
    'field_headline',
    'field_headline_2',
    'field_blurb_2',
    'field_content_bottom',
    'field_job_title',
    'field_person_bio',
    'field_tfa_supporter_link',
    'field_tfa_supporter_description',
    'field_file_image_alt_text',
    'field_file_image_title_text',

  );


  // Enable translation for the specified fields.
  module_load_include('admin.inc', 'entity_translation');
  foreach ($fields as $field_name) {
    $field = field_info_field($field_name);
    if (empty($field['translatable'])) {
      entity_translation_translatable_form_submit(array(), array(
        'values' => array(
          'translatable' => '0', // Should be a string.
          'copy_all_languages' => TRUE,
        ),
        'field' => $field,
      ));
    }
  }
}