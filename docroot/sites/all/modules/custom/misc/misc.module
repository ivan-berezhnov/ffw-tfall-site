<?php

/*
 * implements hook_menu
 */

function misc_menu() {
    module_load_include('inc', 'pathauto');

    $customnodes = array('news', 'news/latest', 'network-learning', 'network-learning/latest', 'contact-thank-you');

    foreach ($customnodes as $key)
        $items[$key] = array(
            'page callback' => 'theme_render_template',
            'page arguments' => array(path_to_theme() . '/templates/node/node-unformatted--' . pathauto_cleanstring($key) . '.tpl.php', array()),
            'access callback' => TRUE,
        );

    return $items;
}

/*
 * Implements hook_views_invalidate_cache (runs when a change is made to views.
 *
 * Used to set a flag when a view is updated in order that the menu cache is rebuilt.
 * This allows the custom pages built in misc_menu to be refreshed with the updated views.
 * The refresh functionality is implemented in page.tpl.php
 */
function misc_views_invalidate_cache(){
   variable_set('custom_node_menu_rebuilt', FALSE);
}

/*
 * implements hook_theme()
 */
function misc_theme() {
    return array(
        'misc_contact_form_email' => array(
            'template' => 'templates/contact_form_email',
            'arguments' => array('content' => null),
        ),
    );
}

/**
 * implements hook_form_alter
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function misc_form_alter(&$form, &$form_state, $form_id) {

    if($form_id == 'national_organization_node_form'){
        $form['field_national_organization_twit'][LANGUAGE_NONE][0]['#format'] = 'full_html';
    }

  if($form_id == 'constant_contact_signup_form_1'){
    unset($form['captcha']);
    $form['submit']['#value'] = t('Subscribe to our newsletter');
    $form['#submit'][] = 'misc_constant_contact_signup_form_submit';
  }

}

/*
 * Function to override the constant_contact_signup_form_submit in order that it doesn't go to the homepage if the
 * block settings for the redirect url.
 */
function misc_constant_contact_signup_form_submit($form, &$form_state)
{
  unset($form_state['redirect']);
}

/*
 * implements hook_entity_info_alter
 */

function misc_entity_info_alter(&$entity_info) {
    $entity_info['node']['view modes']['our_model'] = array(
        'label' => 'Our Model',
        'custom settings' => TRUE,
    );
    $entity_info['node']['view modes']['global_organization'] = array(
        'label' => 'Global organization',
        'custom settings' => TRUE,
    );
}

/*
 * contact us form
 */
function misc_widget_contact_form() {
    module_load_include('inc', 'misc', 'includes/misc_contact.form');
    return render(drupal_get_form('misc_contact_form'));
}

/*
 * implements hook_mail()
 */
function misc_mail($key, &$message, $params) {

    switch ($key) {
        case 'contact_form':
            $message['subject'] = t('Contact email from website');
            $langcode = $message['language']->language;
            $message['body'][] = theme('misc_contact_form_email', array('content' => $params));
            break;
    }
}


/**
 * Implements hook_block_info()
 * @author AlexB
 */
function misc_block_info()
{
    $blocks['contact_form'] = array(
        'info' => t('Contact form'),
        'status' => TRUE,
        'region' => 'content',
        'weight' => 0,
        'visibility' => 1,
    );

    return $blocks;
}

/**
 * Implements hook_block_view
 * @author AlexB
 */
function misc_block_view($delta = '')
{
    switch($delta){
        case 'contact_form':
            $block['title'] = '';
            $block['content'] = contact_block_contents($delta);
            return $block;
            break;
    }
}

/**
 * A module defined block content function.
 * @author AlexB
 */
function contact_block_contents($delta)
{
    switch($delta){
        case 'contact_form':
            $contact_form = misc_widget_contact_form();
            return $contact_form;
            break;
    }

}
